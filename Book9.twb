<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='we2+' inline='true' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='we2' name='textscan.0q1lzqh0r8p6e312gll0s0xufvn8'>
            <connection class='textscan' directory='C:/Users/lCKUG/Downloads/ds_project-patch-1' filename='we2.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.0q1lzqh0r8p6e312gll0s0xufvn8' name='cities.csv' table='[cities#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='city' ordinal='0' />
              <column datatype='string' name='city_ascii' ordinal='1' />
              <column datatype='real' name='lat' ordinal='2' />
              <column datatype='real' name='lng' ordinal='3' />
              <column datatype='string' name='country' ordinal='4' />
              <column datatype='string' name='iso2' ordinal='5' />
              <column datatype='string' name='iso3' ordinal='6' />
              <column datatype='string' name='admin_name' ordinal='7' />
              <column datatype='string' name='capital' ordinal='8' />
              <column datatype='real' name='population' ordinal='9' />
              <column datatype='integer' name='id' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.0q1lzqh0r8p6e312gll0s0xufvn8' name='we2.csv' table='[we2#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='time' ordinal='1' />
              <column datatype='real' name='temperature_2m' ordinal='2' />
              <column datatype='real' name='relative_humidity_2m' ordinal='3' />
              <column datatype='real' name='dew_point_2m' ordinal='4' />
              <column datatype='real' name='rain' ordinal='5' />
              <column datatype='real' name='snowfall' ordinal='6' />
              <column datatype='real' name='surface_pressure' ordinal='7' />
              <column datatype='real' name='cloud_cover' ordinal='8' />
              <column datatype='real' name='wind_speed_10m' ordinal='9' />
              <column datatype='real' name='wind_direction_10m' ordinal='10' />
              <column datatype='string' name='province' ordinal='11' />
              <column datatype='string' name='country' ordinal='12' />
            </columns>
          </relation>
          <relation connection='textscan.0q1lzqh0r8p6e312gll0s0xufvn8' name='ar2.csv' table='[ar2#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='time' ordinal='1' />
              <column datatype='real' name='co' ordinal='2' />
              <column datatype='real' name='no2' ordinal='3' />
              <column datatype='real' name='o3' ordinal='4' />
              <column datatype='real' name='so2' ordinal='5' />
              <column datatype='real' name='pm2_5' ordinal='6' />
              <column datatype='real' name='pm10' ordinal='7' />
              <column datatype='string' name='province' ordinal='8' />
              <column datatype='string' name='country' ordinal='9' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1 (ar2.csv)]' value='[ar2.csv].[F1]' />
          <map key='[F1]' value='[we2.csv].[F1]' />
          <map key='[admin_name]' value='[cities.csv].[admin_name]' />
          <map key='[capital]' value='[cities.csv].[capital]' />
          <map key='[city]' value='[cities.csv].[city]' />
          <map key='[city_ascii]' value='[cities.csv].[city_ascii]' />
          <map key='[cloud_cover]' value='[we2.csv].[cloud_cover]' />
          <map key='[co]' value='[ar2.csv].[co]' />
          <map key='[country (ar2.csv)]' value='[ar2.csv].[country]' />
          <map key='[country (cities.csv)]' value='[cities.csv].[country]' />
          <map key='[country]' value='[we2.csv].[country]' />
          <map key='[dew_point_2m]' value='[we2.csv].[dew_point_2m]' />
          <map key='[id]' value='[cities.csv].[id]' />
          <map key='[iso2]' value='[cities.csv].[iso2]' />
          <map key='[iso3]' value='[cities.csv].[iso3]' />
          <map key='[lat]' value='[cities.csv].[lat]' />
          <map key='[lng]' value='[cities.csv].[lng]' />
          <map key='[no2]' value='[ar2.csv].[no2]' />
          <map key='[o3]' value='[ar2.csv].[o3]' />
          <map key='[pm10]' value='[ar2.csv].[pm10]' />
          <map key='[pm2_5]' value='[ar2.csv].[pm2_5]' />
          <map key='[population]' value='[cities.csv].[population]' />
          <map key='[province (ar2.csv)]' value='[ar2.csv].[province]' />
          <map key='[province]' value='[we2.csv].[province]' />
          <map key='[rain]' value='[we2.csv].[rain]' />
          <map key='[relative_humidity_2m]' value='[we2.csv].[relative_humidity_2m]' />
          <map key='[snowfall]' value='[we2.csv].[snowfall]' />
          <map key='[so2]' value='[ar2.csv].[so2]' />
          <map key='[surface_pressure]' value='[we2.csv].[surface_pressure]' />
          <map key='[temperature_2m]' value='[we2.csv].[temperature_2m]' />
          <map key='[time (ar2.csv)]' value='[ar2.csv].[time]' />
          <map key='[time]' value='[we2.csv].[time]' />
          <map key='[wind_direction_10m]' value='[we2.csv].[wind_direction_10m]' />
          <map key='[wind_speed_10m]' value='[we2.csv].[wind_speed_10m]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_ascii</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_ascii]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>city_ascii</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (cities.csv)]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso2]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>iso2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso3]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>iso3</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>admin_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[admin_name]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>admin_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>capital</remote-name>
            <remote-type>129</remote-type>
            <local-name>[capital]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>capital</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cities.csv_B595D2EAF78C48129C251B16A94B80A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_2m</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_2m]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>temperature_2m</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>relative_humidity_2m</remote-name>
            <remote-type>5</remote-type>
            <local-name>[relative_humidity_2m]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>relative_humidity_2m</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dew_point_2m</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dew_point_2m]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>dew_point_2m</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rain</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rain]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>rain</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snowfall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[snowfall]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>snowfall</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>surface_pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[surface_pressure]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>surface_pressure</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cloud_cover</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cloud_cover]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>cloud_cover</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_10m</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_10m]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>wind_speed_10m</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_direction_10m</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_direction_10m]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>wind_direction_10m</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[we2.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (ar2.csv)]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[time (ar2.csv)]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>25</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>co</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>no2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[no2]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>no2</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>o3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[o3]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>o3</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>so2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[so2]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>so2</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pm2_5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pm2_5]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>pm2_5</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pm10</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pm10]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>pm10</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province (ar2.csv)]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (ar2.csv)]</local-name>
            <parent-name>[ar2.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ar2.csv_6B7E52277B524AB991D77DA1AC387662]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:co:qk]&quot;' value='Co' />
          <alias key='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:no2:qk]&quot;' value=' No2' />
          <alias key='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:o3:qk]&quot;' value='O3' />
          <alias key='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm10:qk]&quot;' value=' Pm10' />
          <alias key='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm2_5:qk]&quot;' value=' Pm2.5' />
          <alias key='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk]&quot;' value='Rain' />
          <alias key='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:relative_humidity_2m:qk]&quot;' value=' Relative Humidity' />
          <alias key='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:so2:qk]&quot;' value='So2' />
          <alias key='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]&quot;' value='Temperature' />
        </aliases>
      </column>
      <column caption='max_pm10' datatype='real' name='[Calculation_1076641797750886400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED DATEPART(&apos;day&apos;,[time]):MAX([pm10])} - {FIXED DATEPART(&apos;day&apos;,[time]):AVG([pm10])}' />
      </column>
      <column caption='max_pm25' datatype='real' name='[Calculation_1076641797767532545]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED DATEPART(&apos;day&apos;,[time]):MAX([pm2_5])} - {FIXED DATEPART(&apos;day&apos;,[time]):AVG([pm2_5])}' />
      </column>
      <column caption='Temp_std' datatype='real' name='[Calculation_1396960320654274560]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([temperature_2m] - &#13;&#10;{FIXED DATEPART(&apos;hour&apos;,[time (ar2.csv)]):STDEV([temperature_2m])})&#13;&#10;/&#13;&#10;({FIXED DATEPART(&apos;hour&apos;,[time (ar2.csv)]):AVG([temperature_2m])})' />
      </column>
      <column caption='temp_norm' datatype='real' name='[Calculation_1396960320656924674]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([temperature_2m] - {FIXED DATEPART(&apos;hour&apos;,[time]):MIN([temperature_2m])})&#13;&#10;/&#13;&#10;({FIXED DATEPART(&apos;hour&apos;,[time]):MAX([temperature_2m])}&#13;&#10;-{FIXED DATEPART(&apos;hour&apos;,[time]):MIN([temperature_2m])})' />
      </column>
      <column caption='wind_s_std' datatype='real' name='[Calculation_1736419142655979520]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([wind_speed_10m] - {FIXED DATEPART(&apos;hour&apos;, [time]):AVG([wind_speed_10m])})&#13;&#10;/&#13;&#10;({FIXED DATEPART(&apos;hour&apos;, [time]):STDEV([wind_speed_10m])})' />
      </column>
      <column caption='bui_min' datatype='real' name='[Calculation_936185784171503616]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[pm10] + [pm2_5]' />
      </column>
      <column caption='khi' datatype='real' name='[Calculation_936185784235155457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[so2]+[no2]+[o3]+[co]' />
      </column>
      <column caption='AVG([Co]) + AVG([So2]) + AVG([No2])' datatype='real' name='[Calculation_936185784235638786]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([co]) + AVG([so2]) + AVG([no2])' />
      </column>
      <column datatype='integer' name='[F1 (ar2.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column caption='ar2.csv' datatype='table' name='[__tableau_internal_object_id__].[ar2.csv_6B7E52277B524AB991D77DA1AC387662]' role='measure' type='quantitative' />
      <column caption='cities.csv' datatype='table' name='[__tableau_internal_object_id__].[cities.csv_B595D2EAF78C48129C251B16A94B80A7]' role='measure' type='quantitative' />
      <column caption='we2.csv' datatype='table' name='[__tableau_internal_object_id__].[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]' role='measure' type='quantitative' />
      <column caption='Admin Name' datatype='string' name='[admin_name]' role='dimension' type='nominal' />
      <column caption='Capital' datatype='string' name='[capital]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City Ascii' datatype='string' name='[city_ascii]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Cloud Cover' datatype='real' name='[cloud_cover]' role='measure' type='quantitative' />
      <column caption='Co' datatype='real' name='[co]' role='measure' type='quantitative' />
      <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Cities.Csv)' datatype='string' name='[country (cities.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Dew Point 2M' datatype='real' name='[dew_point_2m]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Iso2' datatype='string' name='[iso2]' role='dimension' type='nominal' />
      <column caption='Iso3' datatype='string' name='[iso3]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lng' datatype='real' name='[lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
      <column caption='O3' datatype='real' name='[o3]' role='measure' type='quantitative' />
      <column caption='Pm10' datatype='real' name='[pm10]' role='measure' type='quantitative' />
      <column caption='Pm2 5' datatype='real' name='[pm2_5]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Rain' datatype='real' name='[rain]' role='measure' type='quantitative' />
      <column caption='Relative Humidity 2M' datatype='real' name='[relative_humidity_2m]' role='measure' type='quantitative' />
      <column caption='Snowfall' datatype='real' name='[snowfall]' role='measure' type='quantitative' />
      <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
      <column caption='Surface Pressure' datatype='real' name='[surface_pressure]' role='measure' type='quantitative' />
      <column caption='Temperature 2M' datatype='real' name='[temperature_2m]' role='measure' type='quantitative' />
      <column caption='Time (Ar2.Csv)' datatype='datetime' name='[time (ar2.csv)]' role='dimension' type='ordinal' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Wind Direction 10M' datatype='real' name='[wind_direction_10m]' role='measure' type='quantitative' />
      <column caption='Wind Speed 10M' datatype='real' name='[wind_speed_10m]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[ar2.csv_6B7E52277B524AB991D77DA1AC387662]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ar2.csv_6B7E52277B524AB991D77DA1AC387662:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[cities.csv_B595D2EAF78C48129C251B16A94B80A7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cities.csv_B595D2EAF78C48129C251B16A94B80A7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[we2.csv_FBC0789608EF4C2C81705F88B69B0BA2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:we2.csv_FBC0789608EF4C2C81705F88B69B0BA2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1076641797750886400]' derivation='Attribute' name='[attr:Calculation_1076641797750886400:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1076641797767532545]' derivation='Attribute' name='[attr:Calculation_1076641797767532545:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co]' derivation='Attribute' name='[attr:co:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Attribute' name='[attr:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lng]' derivation='Attribute' name='[attr:lng:qk]' pivot='key' type='quantitative' />
      <column-instance column='[no2]' derivation='Attribute' name='[attr:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[o3]' derivation='Attribute' name='[attr:o3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pm10]' derivation='Attribute' name='[attr:pm10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pm2_5]' derivation='Attribute' name='[attr:pm2_5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='Attribute' name='[attr:so2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1396960320654274560]' derivation='Avg' name='[avg:Calculation_1396960320654274560:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co]' derivation='Avg' name='[avg:co:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lng]' derivation='Avg' name='[avg:lng:qk]' pivot='key' type='quantitative' />
      <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[o3]' derivation='Avg' name='[avg:o3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pm10]' derivation='Avg' name='[avg:pm10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pm2_5]' derivation='Avg' name='[avg:pm2_5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain]' derivation='Avg' name='[avg:rain:qk]' pivot='key' type='quantitative' />
      <column-instance column='[relative_humidity_2m]' derivation='Avg' name='[avg:relative_humidity_2m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_2m]' derivation='Avg' name='[avg:temperature_2m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pm10]' derivation='Max' name='[max:pm10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain]' derivation='Max' name='[max:rain:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_2m]' derivation='Max' name='[max:temperature_2m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain]' derivation='Min' name='[min:rain:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_2m]' derivation='Min' name='[min:temperature_2m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co]' derivation='None' name='[none:co:qk]' pivot='key' type='quantitative' />
      <column-instance column='[no2]' derivation='None' name='[none:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[o3]' derivation='None' name='[none:o3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='None' name='[none:so2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1076641797750886400]' derivation='Sum' name='[sum:Calculation_1076641797750886400:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1076641797767532545]' derivation='Sum' name='[sum:Calculation_1076641797767532545:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1396960320654274560]' derivation='Sum' name='[sum:Calculation_1396960320654274560:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1396960320656924674]' derivation='Sum' name='[sum:Calculation_1396960320656924674:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1736419142655979520]' derivation='Sum' name='[sum:Calculation_1736419142655979520:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_936185784171503616]' derivation='Sum' name='[sum:Calculation_936185784171503616:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_936185784235155457]' derivation='Sum' name='[sum:Calculation_936185784235155457:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1 (ar2.csv)]' derivation='Sum' name='[sum:F1 (ar2.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cloud_cover]' derivation='Sum' name='[sum:cloud_cover:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co]' derivation='Sum' name='[sum:co:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dew_point_2m]' derivation='Sum' name='[sum:dew_point_2m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lng]' derivation='Sum' name='[sum:lng:qk]' pivot='key' type='quantitative' />
      <column-instance column='[no2]' derivation='Sum' name='[sum:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[o3]' derivation='Sum' name='[sum:o3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pm10]' derivation='Sum' name='[sum:pm10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pm2_5]' derivation='Sum' name='[sum:pm2_5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain]' derivation='Sum' name='[sum:rain:qk]' pivot='key' type='quantitative' />
      <column-instance column='[relative_humidity_2m]' derivation='Sum' name='[sum:relative_humidity_2m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[snowfall]' derivation='Sum' name='[sum:snowfall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='Sum' name='[sum:so2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[surface_pressure]' derivation='Sum' name='[sum:surface_pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_2m]' derivation='Sum' name='[sum:temperature_2m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wind_direction_10m]' derivation='Sum' name='[sum:wind_direction_10m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wind_speed_10m]' derivation='Sum' name='[sum:wind_speed_10m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_936185784235638786]' derivation='User' name='[usr:Calculation_936185784235638786:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='country, province'>
          <field>[country]</field>
          <field>[province]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:so2:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:no2:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:so2:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:so2:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:Calculation_1076641797767532545:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:dew_point_2m:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:so2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm2_5:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:so2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[max:rain:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[min:rain:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:so2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:rain:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:so2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[usr:Calculation_936185784235638786:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[max:temperature_2m:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[min:temperature_2m:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:temperature_2m:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:wind_speed_10m:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:lat:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:lat:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:Calculation_1396960320656924674:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[__tableau_internal_object_id__].[cnt:ar2.csv_6B7E52277B524AB991D77DA1AC387662:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:Calculation_936185784171503616:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:surface_pressure:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:no2:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:no2:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:no2:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:no2:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[__tableau_internal_object_id__].[cnt:cities.csv_B595D2EAF78C48129C251B16A94B80A7:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:Calculation_936185784235155457:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:lng:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:lng:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:lng:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:o3:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:o3:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:o3:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:o3:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:pm2_5:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:pm2_5:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:snowfall:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:Calculation_1736419142655979520:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:co:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:co:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:co:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:co:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[__tableau_internal_object_id__].[cnt:we2.csv_FBC0789608EF4C2C81705F88B69B0BA2:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:Calculation_1076641797750886400:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:Calculation_1396960320654274560:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:relative_humidity_2m:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:Calculation_1396960320654274560:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:relative_humidity_2m:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:pm10:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[max:pm10:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:pm10:qk]&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm10:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:F1 (ar2.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:cloud_cover:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:wind_direction_10m:qk]&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:Calculation_1076641797750886400:qk]&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:Calculation_1076641797767532545:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='ar2.csv' id='ar2.csv_6B7E52277B524AB991D77DA1AC387662'>
            <properties context=''>
              <relation connection='textscan.0q1lzqh0r8p6e312gll0s0xufvn8' name='ar2.csv' table='[ar2#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' name='time' ordinal='1' />
                  <column datatype='real' name='co' ordinal='2' />
                  <column datatype='real' name='no2' ordinal='3' />
                  <column datatype='real' name='o3' ordinal='4' />
                  <column datatype='real' name='so2' ordinal='5' />
                  <column datatype='real' name='pm2_5' ordinal='6' />
                  <column datatype='real' name='pm10' ordinal='7' />
                  <column datatype='string' name='province' ordinal='8' />
                  <column datatype='string' name='country' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='cities.csv' id='cities.csv_B595D2EAF78C48129C251B16A94B80A7'>
            <properties context=''>
              <relation connection='textscan.0q1lzqh0r8p6e312gll0s0xufvn8' name='cities.csv' table='[cities#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='city' ordinal='0' />
                  <column datatype='string' name='city_ascii' ordinal='1' />
                  <column datatype='real' name='lat' ordinal='2' />
                  <column datatype='real' name='lng' ordinal='3' />
                  <column datatype='string' name='country' ordinal='4' />
                  <column datatype='string' name='iso2' ordinal='5' />
                  <column datatype='string' name='iso3' ordinal='6' />
                  <column datatype='string' name='admin_name' ordinal='7' />
                  <column datatype='string' name='capital' ordinal='8' />
                  <column datatype='real' name='population' ordinal='9' />
                  <column datatype='integer' name='id' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='we2.csv' id='we2.csv_FBC0789608EF4C2C81705F88B69B0BA2'>
            <properties context=''>
              <relation connection='textscan.0q1lzqh0r8p6e312gll0s0xufvn8' name='we2.csv' table='[we2#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' name='time' ordinal='1' />
                  <column datatype='real' name='temperature_2m' ordinal='2' />
                  <column datatype='real' name='relative_humidity_2m' ordinal='3' />
                  <column datatype='real' name='dew_point_2m' ordinal='4' />
                  <column datatype='real' name='rain' ordinal='5' />
                  <column datatype='real' name='snowfall' ordinal='6' />
                  <column datatype='real' name='surface_pressure' ordinal='7' />
                  <column datatype='real' name='cloud_cover' ordinal='8' />
                  <column datatype='real' name='wind_speed_10m' ordinal='9' />
                  <column datatype='real' name='wind_direction_10m' ordinal='10' />
                  <column datatype='string' name='province' ordinal='11' />
                  <column datatype='string' name='country' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[province]' />
                <expression op='[province (ar2.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[country]' />
                <expression op='[country (ar2.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (ar2.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='we2.csv_FBC0789608EF4C2C81705F88B69B0BA2' />
            <second-end-point object-id='ar2.csv_6B7E52277B524AB991D77DA1AC387662' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[city]' />
                <expression op='[province]' />
              </expression>
              <expression op='='>
                <expression op='[country (cities.csv)]' />
                <expression op='[country]' />
              </expression>
            </expression>
            <first-end-point object-id='cities.csv_B595D2EAF78C48129C251B16A94B80A7' />
            <second-end-point object-id='we2.csv_FBC0789608EF4C2C81705F88B69B0BA2' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Temparature Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column-instance column='[lat]' derivation='Attribute' name='[attr:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lng]' derivation='Attribute' name='[attr:lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temperature_2m]' derivation='Avg' name='[avg:temperature_2m:qk]' pivot='key' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lng' datatype='real' name='[lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Temperature 2M' datatype='real' name='[temperature_2m]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Longitude (generated)]' field-type='quantitative' max='12654807.138187479' min='10964813.947003493' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Latitude (generated)]' field-type='quantitative' max='2868326.1083302638' min='814663.59571494791' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' value='Temperature'>
              <formatted-text>
                <run>Temperature</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:lat:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:lng:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' />
              <geometry column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Latitude (generated)]</rows>
        <cols>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E0C95C58-1904-4905-B4CC-C5D293213727}' />
    </worksheet>
    <worksheet name='Sheet 2 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Temparature Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column-instance column='[lat]' derivation='Attribute' name='[attr:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lng]' derivation='Attribute' name='[attr:lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temperature_2m]' derivation='Avg' name='[avg:temperature_2m:qk]' pivot='key' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lng' datatype='real' name='[lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Temperature 2M' datatype='real' name='[temperature_2m]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' value='Temperature'>
              <formatted-text>
                <run>Temperature</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:lat:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:lng:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' />
              <geometry column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Latitude (generated)]</rows>
        <cols>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F6A950B5-17F5-4AB1-BB8A-A400A0387D82}' />
    </worksheet>
    <worksheet name='big average'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Rain and Temparature (Month)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column-instance column='[rain]' derivation='Avg' name='[avg:rain:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temperature_2m]' derivation='Avg' name='[avg:temperature_2m:qk]' pivot='key' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Rain' datatype='real' name='[rain]' role='measure' type='quantitative' />
            <column caption='Temperature 2M' datatype='real' name='[temperature_2m]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' context='true' filter-group='4'>
            <groupfilter function='member' level='[none:province (ar2.csv):nk]' member='&quot;Đà Nẵng&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:qk]' field-type='quantitative' max='12' min='1' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' scope='rows' value='Avg. Temperature' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk] + [federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk])</rows>
        <cols>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:qk]</cols>
      </table>
      <simple-id uuid='{F0616E3E-226E-42AD-A8A3-A243636DE62B}' />
    </worksheet>
    <worksheet name='pm'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pm2.5 and Pm10</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column caption='wind_s_std' datatype='real' name='[Calculation_1736419142655979520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([wind_speed_10m] - {FIXED DATEPART(&apos;hour&apos;, [time]):AVG([wind_speed_10m])})&#13;&#10;/&#13;&#10;({FIXED DATEPART(&apos;hour&apos;, [time]):STDEV([wind_speed_10m])})' />
            </column>
            <column-instance column='[Calculation_1736419142655979520]' derivation='Avg' name='[avg:Calculation_1736419142655979520:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pm10]' derivation='Avg' name='[avg:pm10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pm2_5]' derivation='Avg' name='[avg:pm2_5:qk]' pivot='key' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='Pm10' datatype='real' name='[pm10]' role='measure' type='quantitative' />
            <column caption='Pm2 5' datatype='real' name='[pm2_5]' role='measure' type='quantitative' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed 10M' datatype='real' name='[wind_speed_10m]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm2_5:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' context='true' filter-group='4'>
            <groupfilter function='member' level='[none:province (ar2.csv):nk]' member='&quot;Đà Nẵng&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[hr:time:qk]' field-type='quantitative' max='23' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[hr:time:qk]' scope='cols' value='Hour' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
              <size column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:Calculation_1736419142655979520:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm10:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm2_5:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' enable-instant-analytics='false' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm10:qk]' z-order='1' />
            <reference-line axis-column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' enable-instant-analytics='false' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm2_5:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]</rows>
        <cols>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[hr:time:qk]</cols>
      </table>
      <simple-id uuid='{60B72A7C-046A-4800-8ABB-F8664B8B3D1A}' />
    </worksheet>
    <worksheet name='pm (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Max values</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rain]' derivation='Max' name='[max:rain:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temperature_2m]' derivation='Max' name='[max:temperature_2m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rain]' derivation='Min' name='[min:rain:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temperature_2m]' derivation='Min' name='[min:temperature_2m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Rain' datatype='real' name='[rain]' role='measure' type='quantitative' />
            <column caption='Temperature 2M' datatype='real' name='[temperature_2m]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[max:rain:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[min:rain:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[max:temperature_2m:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[min:temperature_2m:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' context='true' filter-group='4'>
            <groupfilter function='member' level='[none:province (ar2.csv):nk]' member='&quot;Đà Nẵng&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f1f0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#69aaa54b' />
            <format attr='stroke-color' id='refline1' value='#8cd17d4b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{825E4AB2-E318-4AC6-A9AB-0C8D64FAC57A}' />
    </worksheet>
    <worksheet name='pm (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Air Component</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column-instance column='[co]' derivation='Avg' name='[avg:co:qk]' pivot='key' type='quantitative' />
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[o3]' derivation='Avg' name='[avg:o3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Co' datatype='real' name='[co]' role='measure' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='O3' datatype='real' name='[o3]' role='measure' type='quantitative' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column-instance column='[no2]' derivation='Sum' name='[sum:no2:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:co:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:o3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:so2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:no2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:co:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:o3:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:so2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:no2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' context='true' filter-group='4'>
            <groupfilter function='member' level='[none:province (ar2.csv):nk]' member='&quot;Đà Nẵng&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
              <size column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8A1931FD-5939-4F9A-87C8-D60FEB0E409C}' />
    </worksheet>
    <worksheet name='pm (4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bui Min map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column caption='bui_min' datatype='real' name='[Calculation_936185784171503616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[pm10] + [pm2_5]' />
            </column>
            <column-instance column='[lat]' derivation='Attribute' name='[attr:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lng]' derivation='Attribute' name='[attr:lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_936185784171503616]' derivation='Avg' name='[avg:Calculation_936185784171503616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pm10]' derivation='Avg' name='[avg:pm10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pm2_5]' derivation='Avg' name='[avg:pm2_5:qk]' pivot='key' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lng' datatype='real' name='[lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='Pm10' datatype='real' name='[pm10]' role='measure' type='quantitative' />
            <column caption='Pm2 5' datatype='real' name='[pm2_5]' role='measure' type='quantitative' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Longitude (generated)]' field-type='quantitative' max='13180240.528922772' min='10294642.12634599' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Latitude (generated)]' field-type='quantitative' max='2649511.6303541283' min='1000598.183740939' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:Calculation_936185784171503616:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:lat:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:lng:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' />
              <tooltip column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm10:qk]' />
              <tooltip column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm2_5:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Latitude (generated)]</rows>
        <cols>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6352DAC4-1C2E-4091-9257-E1C1E0BE9711}' />
    </worksheet>
    <worksheet name='pm (5)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column caption='max_pm10' datatype='real' name='[Calculation_1076641797750886400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED DATEPART(&apos;day&apos;,[time]):MAX([pm10])} - {FIXED DATEPART(&apos;day&apos;,[time]):AVG([pm10])}' />
            </column>
            <column-instance column='[Calculation_1076641797750886400]' derivation='Attribute' name='[attr:Calculation_1076641797750886400:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pm10]' derivation='Avg' name='[avg:pm10:qk]' pivot='key' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='Pm10' datatype='real' name='[pm10]' role='measure' type='quantitative' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:Calculation_1076641797750886400:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' context='true' filter-group='4'>
            <groupfilter function='member' level='[none:province (ar2.csv):nk]' member='&quot;Đà Nẵng&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
              <size column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' />
              <wedge-size column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C3822234-109D-4C43-A86B-9F8D2160DA5F}' />
    </worksheet>
    <worksheet name='pm (6)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column caption='max_pm25' datatype='real' name='[Calculation_1076641797767532545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED DATEPART(&apos;day&apos;,[time]):MAX([pm2_5])} - {FIXED DATEPART(&apos;day&apos;,[time]):AVG([pm2_5])}' />
            </column>
            <column-instance column='[Calculation_1076641797767532545]' derivation='Attribute' name='[attr:Calculation_1076641797767532545:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pm2_5]' derivation='Avg' name='[avg:pm2_5:qk]' pivot='key' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='Pm2 5' datatype='real' name='[pm2_5]' role='measure' type='quantitative' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:pm2_5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[attr:Calculation_1076641797767532545:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' context='true' filter-group='4'>
            <groupfilter function='member' level='[none:province (ar2.csv):nk]' member='&quot;Đà Nẵng&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
              <size column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' />
              <wedge-size column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6C785A44-E3A7-4398-855A-DB12ADF10DFD}' />
    </worksheet>
    <worksheet name='time series 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Rain and Humidity&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column caption='temp_norm' datatype='real' name='[Calculation_1396960320656924674]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([temperature_2m] - {FIXED DATEPART(&apos;hour&apos;,[time]):MIN([temperature_2m])})&#13;&#10;/&#13;&#10;({FIXED DATEPART(&apos;hour&apos;,[time]):MAX([temperature_2m])}&#13;&#10;-{FIXED DATEPART(&apos;hour&apos;,[time]):MIN([temperature_2m])})' />
            </column>
            <column-instance column='[Calculation_1396960320656924674]' derivation='Avg' name='[avg:Calculation_1396960320656924674:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rain]' derivation='Avg' name='[avg:rain:qk]' pivot='key' type='quantitative' />
            <column-instance column='[relative_humidity_2m]' derivation='Avg' name='[avg:relative_humidity_2m:qk]' pivot='key' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time (ar2.csv)]' derivation='Hour' name='[hr:time (ar2.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Rain' datatype='real' name='[rain]' role='measure' type='quantitative' />
            <column caption='Relative Humidity 2M' datatype='real' name='[relative_humidity_2m]' role='measure' type='quantitative' />
            <column-instance column='[rain]' derivation='Sum' name='[sum:rain:qk]' pivot='key' type='quantitative' />
            <column-instance column='[relative_humidity_2m]' derivation='Sum' name='[sum:relative_humidity_2m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time (ar2.csv)]' derivation='Day-Trunc' name='[tdy:time (ar2.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Day-Trunc' name='[tdy:time:qk]' pivot='key' type='quantitative' />
            <column caption='Temperature 2M' datatype='real' name='[temperature_2m]' role='measure' type='quantitative' />
            <column caption='Time (Ar2.Csv)' datatype='datetime' name='[time (ar2.csv)]' role='dimension' type='ordinal' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:rain:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[sum:relative_humidity_2m:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:relative_humidity_2m:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' context='true' filter-group='4'>
            <groupfilter function='member' level='[none:province (ar2.csv):nk]' member='&quot;Đà Nẵng&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk]' field-type='quantitative' max='10.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:relative_humidity_2m:qk]' field-type='quantitative' fold='true' max='105.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[hr:time (ar2.csv):qk]' field-type='quantitative' max='23' min='0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f3faf9' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dashed' />
            <format attr='stroke-color' id='refline2' value='#f28e2b4b' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='line-visibility' id='refline3' value='on' />
            <format attr='line-pattern-only' id='refline3' value='dashed' />
            <format attr='stroke-color' id='refline3' value='#75a1c74b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:relative_humidity_2m:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:relative_humidity_2m:qk]' z-order='1' />
            <reference-line axis-column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk]' z-order='2' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[tdy:time (ar2.csv):qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:relative_humidity_2m:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
              <size column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:Calculation_1396960320656924674:qk]' />
              <lod column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[tdy:time:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:rain:qk] + [federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:relative_humidity_2m:qk])</rows>
        <cols>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[hr:time (ar2.csv):qk]</cols>
      </table>
      <simple-id uuid='{89682A7B-9A3D-490B-95D9-09124FE67A81}' />
    </worksheet>
    <worksheet name='time series 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average O3, No2, So2</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
          </datasources>
          <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
            <column-instance column='[co]' derivation='Avg' name='[avg:co:qk]' pivot='key' type='quantitative' />
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[o3]' derivation='Avg' name='[avg:o3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Co' datatype='real' name='[co]' role='measure' type='quantitative' />
            <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
            <column caption='O3' datatype='real' name='[o3]' role='measure' type='quantitative' />
            <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:no2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:o3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:so2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:no2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:co:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:o3:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:so2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' filter-group='5'>
            <groupfilter function='member' level='[dy:time:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[mn:time:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:country (ar2.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' context='true' filter-group='4'>
            <groupfilter function='member' level='[none:province (ar2.csv):nk]' member='&quot;Đà Nẵng&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' context='true' filter-group='7'>
            <groupfilter function='member' level='[yr:time:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</column>
            <column>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[hr:time:qk]' field-type='quantitative' max='23' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[hr:time:qk]' scope='cols' value='Hour' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:co:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values] + [federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:co:qk])</rows>
        <cols>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[hr:time:qk]</cols>
      </table>
      <simple-id uuid='{26E24E91-3829-4A15-82E8-B77748269E83}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='1080' maxwidth='1920' minheight='1080' minwidth='1920' sizing-mode='fixed' />
      <datasources>
        <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
      </datasources>
      <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
        <column caption='Country (Ar2.Csv)' datatype='string' name='[country (ar2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
        <column-instance column='[time]' derivation='Month' name='[mn:time:ok]' pivot='key' type='ordinal' />
        <column-instance column='[country (ar2.csv)]' derivation='None' name='[none:country (ar2.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
        <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
        <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98518' id='7' param='horz' type-v2='layout-flow' w='99166' x='417' y='741'>
            <zone h='98518' id='5' type-v2='layout-basic' w='99166' x='417' y='741'>
              <zone h='49259' id='3' name='pm' w='33052' x='417' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49259' id='14' name='big average' w='33052' x='417' y='741'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49259' id='17' name='time series 2' w='45073' x='33469' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49259' id='19' name='time series 1' w='41948' x='33469' y='741'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49259' id='22' name='Sheet 2' w='21041' x='78542' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='166' h='49259' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9010' x='90573' y='741'>
                <zone h='4815' id='8' mode='checkdropdown' name='pm' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type-v2='filter' w='8594' x='90781' y='1111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4815' id='16' mode='checkdropdown' name='big average' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' type-v2='filter' w='8594' x='90781' y='5926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4815' id='20' mode='checkdropdown' name='time series 1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' type-v2='filter' w='8594' x='90781' y='10741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4815' id='9' mode='checkdropdown' name='pm' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' type-v2='filter' w='8594' x='90781' y='15556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8241' id='15' name='big average' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' type-v2='filter' w='8594' x='90781' y='20371'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='12222' id='39' name='pm (2)' w='8594' x='90781' y='28612'>
                  <layout-cache fixed-size-h='124' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49259' id='70' name='pm (3)' w='15156' x='75417' y='741'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3519' id='25' leg-item-layout='horz' name='time series 2' pane-specification-id='4' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='25573' x='52396' y='50370' />
        <zone h='3796' id='26' leg-item-layout='horz' name='big average' pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='14271' x='16146' y='926' />
        <zone h='3889' id='11' leg-item-layout='horz' name='pm' pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='14479' x='13333' y='50093' />
        <zone h='3981' id='24' leg-item-layout='horz' name='time series 1' pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='26146' x='57760' y='741' />
        <zone h='7037' id='23' name='Sheet 2' pane-specification-id='0' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' type-v2='color' w='7031' x='92292' y='91574' />
        <zone h='8241' id='72' name='pm (3)' pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='7135' x='82969' y='5648' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2600' minheight='2600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='74' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='73' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone h='4815' id='16' mode='checkdropdown' name='big average' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' type-v2='filter' w='8594' x='90781' y='5926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8241' id='15' mode='checkdropdown' name='big average' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' type-v2='filter' w='8594' x='90781' y='20371'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49259' id='14' is-fixed='true' name='big average' w='33052' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3796' id='26' leg-item-layout='horz' name='big average' pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='14271' x='16146' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4815' id='20' mode='checkdropdown' name='time series 1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' type-v2='filter' w='8594' x='90781' y='10741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49259' id='19' is-fixed='true' name='time series 1' w='41948' x='33469' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3981' id='24' leg-item-layout='horz' name='time series 1' pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='26146' x='57760' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49259' id='70' is-fixed='true' name='pm (3)' w='15156' x='75417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8241' id='72' name='pm (3)' pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='7135' x='82969' y='5648'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='124' h='12222' id='39' is-fixed='true' name='pm (2)' w='8594' x='90781' y='28612'>
                  <layout-cache fixed-size-h='124' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4815' id='8' mode='checkdropdown' name='pm' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type-v2='filter' w='8594' x='90781' y='1111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4815' id='9' mode='checkdropdown' name='pm' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' type-v2='filter' w='8594' x='90781' y='15556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49259' id='3' is-fixed='true' name='pm' w='33052' x='417' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3889' id='11' leg-item-layout='horz' name='pm' pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='14479' x='13333' y='50093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49259' id='17' is-fixed='true' name='time series 2' w='45073' x='33469' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3519' id='25' leg-item-layout='horz' name='time series 2' pane-specification-id='4' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='25573' x='52396' y='50370'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49259' id='22' is-fixed='true' name='Sheet 2' w='21041' x='78542' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7037' id='23' name='Sheet 2' pane-specification-id='0' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' type-v2='color' w='7031' x='92292' y='91574'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{45E63F1C-88C4-4374-8C0D-67A3F75C225B}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='we2+' name='federated.0rbkqbr0rq2c2w1b4mog512l6kth' />
      </datasources>
      <datasource-dependencies datasource='federated.0rbkqbr0rq2c2w1b4mog512l6kth'>
        <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
        <column-instance column='[province (ar2.csv)]' derivation='None' name='[none:province (ar2.csv):nk]' pivot='key' type='nominal' />
        <column caption='Province (Ar2.Csv)' datatype='string' name='[province (ar2.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
        <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='15' name='pm (4)' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='18' name='pm (3)' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='22' name='pm (2)' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='16' mode='checkdropdown' name='pm (4)' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='17' name='pm (4)' pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:Calculation_936185784171503616:qk]' type-v2='size' w='16000' x='83200' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='19' mode='checkdropdown' name='pm (3)' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type-v2='filter' w='16000' x='83200' y='23250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5750' id='20' name='pm (3)' pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' type-v2='size' w='16000' x='83200' y='29750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='21' name='pm (3)' pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='16000' x='83200' y='35500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='23' mode='checkdropdown' name='pm (2)' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' type-v2='filter' w='16000' x='83200' y='48750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='16' mode='checkdropdown' name='pm (4)' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='pm (4)' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='17' name='pm (4)' pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:Calculation_936185784171503616:qk]' type-v2='size' w='16000' x='83200' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='23' mode='checkdropdown' name='pm (2)' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' type-v2='filter' w='16000' x='83200' y='48750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='22' is-fixed='true' name='pm (2)' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='19' mode='checkdropdown' name='pm (3)' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type-v2='filter' w='16000' x='83200' y='23250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='18' is-fixed='true' name='pm (3)' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='20' name='pm (3)' pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' type-v2='size' w='16000' x='83200' y='29750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='21' name='pm (3)' pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type-v2='color' w='16000' x='83200' y='35500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9809CCCD-925E-4A15-9BE8-F6D371F65609}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='time series 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:Calculation_1396960320656924674:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time (ar2.csv):ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84C65B41-9319-4CC5-93FE-62270F22EC65}' />
    </window>
    <window class='worksheet' name='time series 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' type='filter' />
            <card param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' type='filter' />
            <card pane-specification-id='4' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time (ar2.csv):ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time (ar2.csv):ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3334C6C6-B5E2-4E30-A9D9-CEA3766DE3AF}' />
    </window>
    <window class='worksheet' name='big average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[mn:time:ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time (ar2.csv):ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE9684EC-2670-4124-BD25-7B7E37519F36}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{837108D6-C70E-449C-B21B-6D536BF7095D}' />
    </window>
    <window class='worksheet' name='Sheet 2 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0156F1C-977F-420A-8FFA-356A28C92956}' />
    </window>
    <window class='worksheet' name='pm'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:Calculation_1736419142655979520:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD395667-56DE-4F21-A0DA-62DD935B330D}' />
    </window>
    <window class='worksheet' name='pm (4)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:Calculation_936185784171503616:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[hr:time:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:city:nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68F0FFD1-9032-4FB6-9AFB-9A54D7791559}' />
    </window>
    <window class='worksheet' name='pm (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' type='size' />
            <card pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:no2:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:o3:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:city:nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time (ar2.csv):ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3ABCCA19-785C-4942-8648-90016CF0D574}' />
    </window>
    <window class='worksheet' name='pm (5)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' type='size' />
            <card pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:no2:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:o3:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:city:nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time (ar2.csv):ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34BCA16C-EA2B-4EAF-B000-478593470338}' />
    </window>
    <window class='worksheet' name='pm (6)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[Multiple Values]' type='size' />
            <card pane-specification-id='5' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:no2:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:o3:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:city:nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time (ar2.csv):ok]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3835A8B8-D9F3-4C8D-9AE1-623AC2547674}' />
    </window>
    <window class='worksheet' name='pm (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[dy:time:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[avg:temperature_2m:qk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:country (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[none:province (ar2.csv):nk]</field>
            <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D16EE58E-1FB2-4703-85EB-89A22987E622}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='big average'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='pm'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='pm (2)' />
        <viewpoint name='pm (3)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='time series 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='time series 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FA2FBFB9-7446-4E13-B38B-2F567166F0C1}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='pm (2)' />
        <viewpoint name='pm (3)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0rbkqbr0rq2c2w1b4mog512l6kth].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='pm (4)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='22' />
      <simple-id uuid='{01AF4C11-EF3B-4E7E-AE52-9BEDBF686352}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      Ki7KAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='big average' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='pm' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='84' name='pm (2)' width='192'>
      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
      QgjMmv8H3De5jMX/j9IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pm (3)' width='192'>
      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
      BHsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pm (4)' width='192'>
      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
      IJvlQTNNlcAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pm (5)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADYElEQVR4nO3dsWpWSRiA4e/8JgSjUVFQLLRQLMRC7/8K7K29BK/hbJHKxUJ3Z1mG93ng
      x0IcUuTlzHcmE4/zPM+BqKv/+wuA33Ke95+/O46f//xDAmAP5zlzdTXz4MHM9fXMw4czt7cz
      d3czz57df16+nHn1aub165m3b2fevJl5//7+747jl5EctkBs4TxnPn+e+fbtz//tixczHz7M
      fPw48+nTzJcv92s9f+4JwEb+4TZnfvy4/3z9+vNa797NZc1XBps5z5nv3wVAmwBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gTAPs5z+ZICYB83N8uXFAD7ePJk+ZICYA/HMfP4
      8fJlBcAeznPm7m75sgJgH54AZB2HGYC4R4+WLykA9mELRJoASBMAaYZg0gzBpNkCkSYA0gRA
      miGYNEMwaZf1364CIE0ApAmANAGQJgD2svg3QwiAffwHF+MFwF4WnwUIgH0cx/LfDCEA9iIA
      0m5vly4nAPZhCCZPAKSZAUhbfCdAAOzFEEyaGYA0MwBpngCkGYJJ88NwpAmANEMwaYZg0gzB
      pDkJJu1yWRqBANjLcSx9EyQA9rL4UowA2Mvii/ECYD+2QGSZAcgzA5AmANIWngYLgP14C0Sa
      k2DSzACk2QKR5glAmrdApBmCSTMDkGYGIE0ApD19umwpAbCfm5v7u8ELCID9XC7L7gQIgP0s
      vBQjAPYjANKOY9lpsADY06LTYAGwH1sg8hYdhgmAPQmAtEWnwQJgT2YA0gRAmhmAtEWXYgTA
      npwEk2YLRJofhSDNDECaLRBpngCkeQtE2vX1zNXVv15GAOxp0Z0AAbAnAZB2uSx5EyQA9rTo
      f4z/C5xgLMHIfW1KAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='pm (6)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEDklEQVR4nO3dy25cRRSG0V19OX13GwNRgpRBHonn4Yl4pIyZMAkTokSKcJopREhEcglr
      8681bMslD/pza3edU2fcbrdbQajNc/8B8DVut1v99T/1+OLnY3z5ytcRAC3cqurHn36u9WrU
      erWqZbuu3XZdh922TvttnQ9LXc+7up739XA51PfXY313f6yXD+c67Zca458jEQCtPH6+1ePn
      x/r0x2O9/1hV9fFff+dyXOqHby/1+sVdvX5xrTevvqk3r+7rfFwEwP/f7x8+1dsP7+rtL+/+
      9vrLh3Otnulvgmf362/vBUA2ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBN
      AEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQ
      TQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQB
      EE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0
      ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRA
      NAEQTQBEEwDRBEA0AdDCqKr9spm+rgBo4/68n76mAGjjuN9OX1MAtLFs1tPXFABtbNbz364C
      oIUxRl2Oy/R1BUAbl+Nu+poCoI3DztegBDMEE227MQQT7O5kBiDY+eBbIIIdFjvBBNuYAUjm
      WyCiXQ3BJDMEE80NMURzNSjRxhjT1xQA0QRANAEQTQBEEwCtzL4pRgC0Mcb82yIFQCvH3dwr
      QgVAK7vt3AviBEAr68m7wQKgjTHG9AviBEArd5MPxxIArRwMwSRbDMEkm31JtABo5c5GGMlm
      nxAtAFoxBBNtO/loFAHQytYQTLLZB+QKgFbOhmCSHSafDSQAWjEEE22MubvBAqCVUWPqICwA
      Whmj6rSftxkmANrZbecNwgKgHTMAscYYU49JFwDtzHxSjABo53QwBBPMEEw0QzDRjvYBSDbz
      vmAB0I5PAKLNPCBXALQz84BcAdDOZeIBuQKgnZlPiREA7RiCibZMvC1SALSzWo0aY9Jac5aB
      /84YNe1JMQKgnZmPShIA7YyqOixzBmEB0NJ2M+etKwBa2giAVGOMabdFCoCWDMFE2xuCSWYI
      JtqsyyEEQEvX837KOgKgpfOkK0IFQEu7SccjCoCWZp0NJABaOux8AhBs1lNiBEBLp72dYILN
      OiBXALS0Wc+5J1IAtDTGmPLQbAHQ0mqMOh+fPgcIgJbGqDrunr4bLADaWiYckisA2lqvnv72
      FQAtzToaRQC0dXd6egB/AtJXLPWulLcRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='time series 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAT6ElEQVR4nO3de3ScdZ3H8ffvmZlcJ22ubZr0Silt2kILFuoNEUSUBaygwCruObqIuh4v
      R8/uuuuytnrUXc+6enbPioCs7sKuAi6CCEeUuyKUtqS0tE2bpGnT3O+XmcllLs9v//iloSVp
      M/PkmUmmz/d1Tk5/bed5nl+S5/PcfpdH2batEcKj/ADhWHSu6yHEnPCfLIxGIo5WMDY6Sl5+
      vmsVEiKT/ABKKQqCwRk/PBYJ0TMQJkCU8Ljm/NUrAZJaVoj5yErlw3mFReT4FQnlJz/XP/MC
      QsxzKQVgJDRIf18/OX4/2gqkq05CZIyybVtH4jHHKxgJh+USSGStlM4AQpxrJADC0yQAwtMk
      AMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0xwFQNs2tm27XRchMs5Rn+amhsOM237W
      r1sDgNYyqlJkJ0cBqKiooL6p1fxFa/MlRBZyFABl+bhg3VpQCpRCWXIrIbKTowAUFZe6XQ8h
      5oQcuoWnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISn
      OQqAnUgQjyfcrosQGeeoO3Tz0QYiUdi4YS0gI8JE9nI4IEah9cQZQEaEiSzmKACVS6pYENUy
      IkxkPUcByCssIq/Q7aoIkXly6BaeNvsAaBs93O5CVYTIvFkHQNsJeOlf5UZYZKXZnwGUgrY9
      6K43XKiOEJk16wAoyw8X3go775L2AJF13LkJ3nwb9NZDyyuurE6ITHElACpvIWz+hDkL2NJF
      QmQP9x6DXnQLhLvh6LOurVKIdHMtAConCJd8EnbdjU5E3VqtEGnlbkPYhhshPg51v3F1tUKk
      i6sBUIF82HI77LkPHRtxc9VCpIX7XSHWXQ/+PHjjYddXLYTbXA+A8uXApXdA7f3osUG3Vy+E
      qxwFoLezjabjLWf+wPnXQGEF7H3Aab2EyAhH3aHLFlcx3tY+ORhGv/WFecqCLXfAczvQG26G
      4CI36iqE65Rt2zoSj6W0UGSwl3igiIWFuYyEwxQEg1M+o+0EPPJJqKhBvffrLlVXCHc5ugQq
      LC5nYWHuWT+jLB9c9jmoexw90OyockKkW3oHxCx/Byy+EHbdI92lxbyU1gAoZcHWz8HRZ9A9
      h9O5KSEcSf+QyKqLYell8OpdchYQ807aAzB5FmjZiW7bk+7NCZGSzAyKX7QBVl4xMWjGnvnz
      QmRIRgKglILLPgPdB+HYi5nYpBBJydy0KGVrYM018Ord6ERq7Q5CpEvGAqCUgi2fhsFmqH8q
      U5sV4qwyOzFW8QpYez3svhcdG8vopoWYTkYDYM4CfwkjfXDwV5nctBDTyvjUiKpoCazfBnt+
      go70ZHrzQpwm83ODnrwXCOTD89+WWSTEnJqTyXFVQRlctR1OvAL7H5yLKggBzOXs0Esvm5hL
      6Efo7ro5q4bwNkcBGIsM0945u+v3ycax0tXwzDfQ0cis1ieEE44GxNQf3E9+8SKWVS1mJBwm
      PzdgRoFZFiTiqZV76+HRO+CCa+Hdf+18PdOVlQX2WcqWBcy3sgI7kaayz/wCz4Wyz2/+1HpW
      Zd/27dt3xN46pHEG0fFR+gdDLF5cQSwaJScxjNI2yudHjQ3MUPadXlZAQRns/S/IL0aVrHjz
      M2iU8qHGHZYtCzU+eJayed+ZO2XOXlbKvFHqZBm3yho1PnSWspXEZ5It21PLljK/y+iQ+bnq
      RBrKcVR0+PSyPx8VC6NikTOXA/mo6Cnl8TAq/paykzPAqc40JDIV2k7A774G7Xvh5gdQC6pm
      tT4hkjUvXpGkLB9c8ffgy4Hnvil9hURa6dgouul59O/vnB9ngMmKnXgFnvgSXPpZ1KW3A8qV
      9Qqh7Tj0HIEjT5oJnCcaYR1Ni5Iuatnb0Zs+bqZWrH4bquriua6SyGZao0Md0PB7qP8t9DUC
      GnKLoObDUHP9/DoDAKaT3KOfhvEQ3Hy/efeAEMnSGh0Nw/E/wuEnoL0WElHzNGLRelj/YVj9
      vsn9atoA9PYNYFkWpSUz73xuBwBA9zXC/30Sznsv6upvmcoLcRY6EYWO/XDkCTPoamzI/Ed+
      qRmHUnMDqnztlH1pyiVQa1snf/jTbnp7B7jjU7eQn5+XkW/gVKp0NfqdX4Y//DN66VZUzQ0Z
      r4OYHR0bhRMvw8rLzXyx6dqOtk13mv0PwlCr+UfLD9VbzNF+1RWonDO/1X1KAIZDYRqPNvOV
      L35qTnZ+wHSY23ATtOyEl76PrrwQVbJybuoinHn1x/D6/8CqK9Dv//ZZd0KntB2Hl34I+39h
      /iG42DSorrseVbLK7EczmHIJNDg4jM/no6gouQqn4xLoJB3phYc/AUWV8OF7UP6zz0Yn5gfd
      2wC//AtYuAwGjsPi9XDt91GFFe5tIz4Oz34TGp4CKwDv/BJs+AgqkNpBe8rFdXHxAoLBAhIJ
      m7mexUcVlsNV/whdB2HXvTKvUDawE/DHfzHviPjQj+DqHdBTD7+6Az1wzJVNaDsBT37F7Pw5
      RXDdD1Cbb0t554czNIQdrN1F7Z59zIue+svfCZv+HF5/AN3y6lzXRsxA1/8W2vbAZZ9FFVag
      1l4H1/0AxgZMCNr3zupAphNReP475vK4qBJuvAe14l2O1zclAFrHGIuMcPxY87wIgFIKtn4e
      ys6H576FDnfNdZXEGeixQXj536FiHWz86OQ1uFr+Dtj2Y3Nz+psvoI8+6ygEOjYCT30N6h4z
      27jpp6iKdbOq8zRnAB8ViysoKCycH/0kmHj32FU7YGwQHroNveen6JOPucT88erdMNoPl/8N
      yhc47b/UovVw008gWAm//zp6/4PoFEKgRwfh8S+aR5wLl5t7wqLKWVd5yj6ulEUkOspgRw/z
      aQ43Vb4GbvwJLN5onjD8/KPoPf8pQZgndNcBM9HBuhtgyeZpP6MWLoMb7zUzBf7x+/Dyv5kn
      OTOtO9QBj30GOvZC5Sa46T5UbpEr9Z7yFGhsqIddr9fht3LZcvlWZnqCm86nQNPSGt2xD3bf
      C627IK8YNn0MNn5UWo3nih1HP3I7DLXAx39phryehY5G4Ok7zdH8gg/Cld844w2s7jtq+oeF
      OmD11XD1DlSgwLWqTzkD9LW2E2OMY00dZ+yKNtTfQ0tbp2uVSIlSqKrN8KH/gA/dBSUrYedd
      8L8fQe++T17MNwf0oceg6w3Y+vkZd37AtAl88Humraf+KXjiS+YS563r7dhnjvyhTjN89gPf
      dXXnh7OMCItHo1g5OdPeBxxvOELugjKWLCozI8IK3W/kSJqdMIPra39mRpcF8uGiW2HNteYp
      gXSjSK9wFzx8m5n0bNs9ZrRVsmwb9txrGswWLIVr/glKVoG24fiL8Ox2QMHWv4ILb02qYStV
      0wag80QT9Y3NrN64iepFpVMW6u/uYDAS47xVyzN/CXRGGh3qhNr/hrrHTQeopZfC225HVV8i
      QUgHO4F+9DOml+XHHnJ8U6q7DsCTXzX9d97zt9BTZ+4nSs+D635o7h3SZNoA1O3dQ0t7PxXL
      l3LxhevPuoL5EwBDa22uRV/7mekCa8eh8iLzWG7l5a7dPAnQh34Nz30T3v1V1KbbZnWE1oMn
      4Ikvm7ljAaovhQ9+D5Vf7FJtpzdtALpajtHeN8KmTeuxZvim5lsAJmltWh533wtNL0Ji3Nww
      n3eleVKxeCMqldO1OI0eHYBf3GLGc998vysd3nSkF57+ByhaAlf8Hcqf/r5oZ7wEamhqZ+t7
      3z3/ngKlSk9cGjX8znSV7Z9oji89D9ZeC2s+gCqqSsv15blLo5//Lhx61DyPr36bi6ueaBvI
      0O9jSgBCve3s3neYgd4Q227dNuOQsXkfgFMlYujON+Dw49D0AowPm3HI1Vug5gZY8S5UTpZ8
      L3NId+ybnMpGvW9HVh88puzf+UUlVFaUEI8y553hXOcLmBvi6kvQ7xqEpueh7jfQ8qrpu55f
      il59lelOu2i9aboXp0vETCNWTiG84wtZvfODw4mxTpVVZ4DpaBvdfxQOP2kuk8JdgDKP41Zd
      bqZwrKgxjWxZ/st2g97/EPzhe/Cer6EuuoVsn7hAAnAKHRs1vQzrfg0ndppHqQCBQihfYy6V
      qrdAxTrzNMljgdDhbnjwVlhQDR/52ZT+PtlIAjAdrc27C7regNbdZmD1QDPYEz+nnCCUX2DC
      sHQLlK819w7nciC0Rj/zDdNye9N9qCWb5rpGrpAAJEFrG8Ld0LkPWveYQAy1mDYGMNNslK8z
      YajcBIs3oHIKyPbLg1Pp1l3w689DzTbUlXeeM2GXADig7YS5V+h43ZwhOvbCUBvoiREUuQth
      UY1pia7eAmWrXe/Dkkk6Pm6GOI70wcceTqq/T7aQALhA23HTW7HtNXOG6NoPw+2mTwtAfonp
      xn3yHqJ0VUYaebSdgGjYdDEIdZivodY3Z1mePEOpieJb/z5RHmgylz5X3onacFPa651JEoB0
      SMTRoXYz2W/bHnOmCHVMBEKZ1tPKC01zf/UlULLSUUvq5A4+OgjhDhjugFC7CV+ow/SiHA9B
      bIRZP9Suuhi23X1O3PieSgKQAToRMztle60JROc+s3NOBqIU/PlnOAqfeq19yr9pG2KjJgCx
      UU7bwX25kLcACheZJzYLqt78M1gJvgBTjvJwynX9NNf3ecWOBp3PdxKAOWAC0WrOEK17oOvA
      mzfUU3b6k9TUv/rzJ3bs6tN39IIyyA2irMA5c7OaLhKA+UDbpkHulJ389N1WTZ8JlOzgs+So
      k7wdH6ex0Z05XgQTr3byoyzf5BenfVlvvtrptC/Z+WfLQWcXzfGjTUTGbdNzT2t0iq9YEmK+
      cNTbq7J6Kf6BIXMEUgplyWgrkZ0cBEBRECxieVBGVonsJ4du4WkSAOFpEgDhaRIA4WkSAOFp
      EgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpjgLQ391BY1Oz23URIuMcDYgp
      KCigsy8kI8JE1nMUgHA4TG5enowIE1nPUQDKK6spd7smQswBOXQLT5MACE+TAAhPkwAIT5MA
      CE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE9zFICBnk4OHjridl2EyDhH
      4wEsy0dVdbWMCBNZz1EAYrEo4UiUkoVBGREmspqMCBOeJodu4WkSAOFpEgDhaRIA4WkSAOFp
      EgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpjgIw3N9DW0e323URIuMcjQco
      Ki5jtKdXRoSJrOcoAIN93URGovKOMJH1lG3bOhKPOV7BSDhMQTDoYpWEyBw5dAtPkwAIT5MA
      CE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPc9QX6K0sVMrL2Gg3Ni3ErDg6A4yPhOkf
      DE3+3a8UnW3t+C0rqS+fSj0wQqSDozNAd08fttaUFhcBkIiG6OzowvL7Ucqi/VgdVrAcnw0q
      PoQqKEePRQjk5NB4rJX3/9k1Ds4ZQrjPUQB0IsZI9M1LmIG+QXIL/GhbMxgaJlhUTEFJMQX5
      Qbpao1jEiMRixBKKFSuXY4FcAIl5wVF3aK01WoNlKSKhMD2hBGiNrTWWZU0t23GONzWzbNV5
      +C1QlkUskUBPfMaszwNlNJbK5jJYSs2qbGtz6Jt12bZRSqFSKVsKxellZdu2DseijEYijhI0
      NjpKIDcv9QW1NgNq0r3MubqtiZ0hc9tSpHzdmgU/dz+AUmpWg1ocLZsFP5x5va2MB2Aeb2sW
      9XPlMagjTnYup0+PzsVtzff6ZXJbs6ifKw1hTUfqaGg8nvTnI8P9NJ/oSGkb2k5wvKGOE209
      KS032NdN7d79KS0DmoaDtfT0p3ZZeKKpgROtqX1fQz0d1DceI5HSvAI2JxqPcOjIsZS21d16
      nNq9+4jGU9lYjAO1r6f0fcXGRmhsbKL9xDEOHKibvHafSWfDQfrHE9QdPESSizA80EtrWyed
      Lc3UNyT389B2nLqDhxmLDLsTgEBeIbn+5FNYuGAheTmpn3wCeUGqlqT2fsqA309uTg6p/Mqj
      kSH6h0YIh0dS2lZeXh79vX0pPeEaGx0hPDRIZCyawlIWhUULWLVqWUr1U8q0wSS7Qxp+SsuK
      UvpZBPIKKAoWYONjYVF+0suVlpUDFqVlpUkvU1RcRsCvsPx+li5bmtQyyvJTWlaM5fe7cwlU
      srCQhL8g6c8PDwwQDocppwJfkstoNLHxMUKhiHk/cZJs26a0vDyl+7ecwmK2XLYVW6d2fCgM
      BqnKCaa0rUXVK4hb3QTzA6lta2EJuSkeRErKKxjXAXL9qXxfCuULcP75ye1cAOMjIULDIRYv
      qWR0PI5K8hKlLzKKjnYzHgoxkFc42c50NoO9XURGouT5EgwNDVGQN/MBUieihIdDWD6fzAoh
      vE06wwlPkwCIrDQWCRNP8lZGa00oFD7t39rauwDwbd++fUdsFlMbxqJRAjk5jpcX3jHcsp9j
      kUIO1v4JOxrFF8gjFosyMhIhMjJONDzIUGSER+5/gOUXrOGxR35FjvIR92k6W9sIjUQZHe5F
      +ws4fOgAsf5Odh5qZtHCPDrbO3jhmRdZXlPD6y+/wPCYTbi/i6j2YSdiNBw5TFV1NbFYjIbG
      Zn7+0OMEg4Vz2A4gPKn+4D5UfxOdBUW88tLTXLBxGQODA1xx1fuo3XmAhNbUbNpMyYIFrFq9
      GsIh9tf3E4wr8PfR0dzI2s1vh4SiqaWNweEYr70WpmbNCpauW0++pRmLaS5asYSdLzyNL9BB
      SOWxuMAiBvh8Pp5+7k+sW7uaizet5/8BXq2t5Az+rdEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='time series 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
